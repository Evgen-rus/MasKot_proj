"""
–ú–æ–¥—É–ª—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±–ª–æ–∫–∞ —É—Å–ª—É–≥ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Zen-–∫–æ—Ç.

–ë–ª–æ–∫ —É—Å–ª—É–≥ —Å–æ–¥–µ—Ä–∂–∏—Ç 4 –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö —É—Å–ª—É–≥.
"""

import flet as ft
from utils.localization import Localization


class Services(ft.UserControl):
    """
    –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –±–ª–æ–∫–∞ —É—Å–ª—É–≥, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —É—Å–ª—É–≥.
    
    –ê—Ç—Ä–∏–±—É—Ç—ã:
        localization (Localization): –û–±—ä–µ–∫—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
        theme (dict): –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Ç–µ–º—ã
    """
    
    def __init__(self, localization: Localization, theme: dict):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±–ª–æ–∫–∞ —É—Å–ª—É–≥.
        
        Args:
            localization (Localization): –û–±—ä–µ–∫—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
            theme (dict): –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Ç–µ–º—ã
        """
        super().__init__()
        self.localization = localization
        self.theme = theme
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞
        self.title = ft.Text()
        
        # –ö–∞—Ä—Ç–æ—á–∫–∏ —É—Å–ª—É–≥
        self.service_cards = []
    
    def build(self):
        """
        –°—Ç—Ä–æ–∏—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±–ª–æ–∫–∞ —É—Å–ª—É–≥.
        
        Returns:
            ft.Container: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –±–ª–æ–∫–æ–º —É—Å–ª—É–≥
        """
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞
        self.title = ft.Text(
            value=self.localization.get("services_title"),
            size=self.theme["font_sizes"]["lg"],
            weight=ft.FontWeight.BOLD,
            color=self.theme["colors"]["text"],
            text_align=ft.TextAlign.CENTER
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —É—Å–ª—É–≥
        self.service_cards = [
            self._create_service_card("service_1_title", "service_1_desc", "üíª"),
            self._create_service_card("service_2_title", "service_2_desc", "üé®"),
            self._create_service_card("service_3_title", "service_3_desc", "üìä"),
            self._create_service_card("service_4_title", "service_4_desc", "üîß")
        ]
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ (2x2 –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö, 4x1 –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ)
        services_grid = self._create_responsive_grid(self.service_cards)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –±–ª–æ–∫–æ–º —É—Å–ª—É–≥
        return ft.Container(
            content=ft.Column(
                [
                    self.title,
                    ft.Container(height=self.theme["spacing"]["md"]),  # –û—Ç—Å—Ç—É–ø
                    services_grid
                ],
                horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                spacing=0
            ),
            margin=ft.margin.only(bottom=self.theme["spacing"]["xl"]),
            padding=ft.padding.all(self.theme["spacing"]["md"])
        )
    
    def _create_service_card(self, title_key, desc_key, icon):
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É —É—Å–ª—É–≥–∏.
        
        Args:
            title_key (str): –ö–ª—é—á –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —É—Å–ª—É–≥–∏
            desc_key (str): –ö–ª—é—á –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —É—Å–ª—É–≥–∏
            icon (str): –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–∫–æ–Ω–∫–∏ —É—Å–ª—É–≥–∏
            
        Returns:
            ft.Container: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–∞—Ä—Ç–æ—á–∫–æ–π —É—Å–ª—É–≥–∏
        """
        card_title = ft.Text(
            value=self.localization.get(title_key),
            size=self.theme["font_sizes"]["md"],
            weight=ft.FontWeight.BOLD,
            color=self.theme["colors"]["text"]
        )
        
        card_description = ft.Text(
            value=self.localization.get(desc_key),
            size=self.theme["font_sizes"]["sm"],
            color=self.theme["colors"]["text_light"]
        )
        
        icon_text = ft.Text(
            value=icon,
            size=32,
            color=self.theme["colors"]["primary"]
        )
        
        return ft.Container(
            content=ft.Column(
                [
                    icon_text,
                    ft.Container(height=self.theme["spacing"]["xs"]),  # –û—Ç—Å—Ç—É–ø
                    card_title,
                    ft.Container(height=self.theme["spacing"]["xs"]),  # –û—Ç—Å—Ç—É–ø
                    card_description
                ],
                spacing=0,
                horizontal_alignment=ft.CrossAxisAlignment.START
            ),
            padding=self.theme["spacing"]["md"],
            border_radius=8,
            bgcolor=self.theme["colors"]["white"],
            width=350,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
            height=180,  # –í—ã—Å–æ—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
            margin=ft.margin.all(self.theme["spacing"]["xs"])
        )
    
    def _create_responsive_grid(self, cards):
        """
        –°–æ–∑–¥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é —Å–µ—Ç–∫—É –∫–∞—Ä—Ç–æ—á–µ–∫.
        
        Args:
            cards (list): –°–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫
            
        Returns:
            ft.ResponsiveRow: –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
        """
        # –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö - 2 –∫–æ–ª–æ–Ω–∫–∏, –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ - 4 –∫–æ–ª–æ–Ω–∫–∏
        return ft.Column(
            [
                ft.Row(
                    [cards[0], cards[1]],
                    alignment=ft.MainAxisAlignment.CENTER,
                    wrap=True
                ),
                ft.Row(
                    [cards[2], cards[3]],
                    alignment=ft.MainAxisAlignment.CENTER,
                    wrap=True
                )
            ],
            spacing=self.theme["spacing"]["sm"],
            horizontal_alignment=ft.CrossAxisAlignment.CENTER
        )
    
    def update_texts(self):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–∏–º —è–∑—ã–∫–æ–º.
        """
        self.title.value = self.localization.get("services_title")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç—ã –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
        service_keys = [
            ("service_1_title", "service_1_desc"),
            ("service_2_title", "service_2_desc"),
            ("service_3_title", "service_3_desc"),
            ("service_4_title", "service_4_desc")
        ]
        
        for i, (title_key, desc_key) in enumerate(service_keys):
            if i < len(self.service_cards):
                card_content = self.service_cards[i].content
                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ 2 (–ø–æ—Å–ª–µ –∏–∫–æ–Ω–∫–∏ –∏ –æ—Ç—Å—Ç—É–ø–∞)
                card_content.controls[2].value = self.localization.get(title_key)
                # –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ 4 (–ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –æ—Ç—Å—Ç—É–ø–∞)
                card_content.controls[4].value = self.localization.get(desc_key) 